

body {
  height: 100%;
  background-image: url(./background/pexels-constantin-1008180.jpg);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: bottom;
  background-attachment: fixed;
}
.App {
  height: fit-content;
  
}

.HeaderSection {
  display: flex;
  justify-content: space-between;
  align-items: center;

  background-color: white;
  box-shadow: 0 5px 5px rgba(0, 0, 0, 0.356);
}

.leftSideHeader{
  display: flex;
  justify-content: flex-start;
  align-items: center;
}

.logo {
  height: 60px;
}

.Nav {
  display: flex;
  justify-content: flex-end;
  align-items: center;
}

.MainSection {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;

  padding-bottom: 30px;
  
}

.Place {
  display: flex;
  justify-content: center;
  align-items: center;

  background-color: rgba(255, 255, 255, 0.74);
  border-radius: 20px;
  box-shadow: 0px 0 5px black;
  margin: 20px;
}

section {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  margin: 20px;
  
}

.secondSection {
  padding: 30px;
  
}

article {
  width: 40vh;
}

h3 {
  text-transform: uppercase;
  font-size: 18px;
  font-weight: 900;
  display: inline;
  margin: 5px 0;
  margin-right: 10px;

  color: rgb(114, 114, 114);
}

h2 {
  margin-top: 0;
  font-size: 32px;
  font-weight: 900;
}

.placePhoto {
  height: 30vh;
  width: 22vh;
  object-fit: cover;
  border-radius: 10px;
  box-shadow: -5px 0 5px rgb(151, 151, 151);
}

.material-symbols-outlined {
  color: rgb(49, 194, 219);
  font-size: 15px;
  font-variation-settings:
  'FILL' 1,
  'wght' 800,
  'GRAD' 0,
  'opsz' 48
}

.link {
  font-size: small;
  color: gray;
}

.date {
  margin-bottom: 0;
}

.description {
  margin-top: 5px;
}
/* 
Here is where the object-fit property comes in. The object-fit property can take one of the following values:

fill - This is default. The image is resized to fill the given dimension. If necessary, the image will be stretched or squished to fit
contain - The image keeps its aspect ratio, but is resized to fit within the given dimension
cover - The image keeps its aspect ratio and fills the given dimension. The image will be clipped to fit
none - The image is not resized
scale-down - the image is scaled down to the smallest version of none or contain 
*/

@media only screen and (max-width: 420px) {
  body {
    background-position: bottom;
  }
  
  .Place {
    flex-direction: column;

    border-radius: 0;
  }

  section {
    margin: 20px 0px;  
  }

  .secondSection {
    padding-top: 5px;
  }

  .placePhoto {
    height: 25vh;
    width: 40vh;
    object-fit: cover;
  }

}